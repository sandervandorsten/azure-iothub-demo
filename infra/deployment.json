{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Storage Account to use"
            }
        },
        "containerName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the blob container."
            }
        },
        "iotHubName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "Specifies the name of the IoT Hub."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "F1",
            "metadata": {
                "description": "Specifies the IotHub SKU."
            }
        },
        "capacityUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 1,
            "defaultValue": 1,
            "metadata": {
                "description": "Specifies the number of provisioned IoT Hub units. Restricted to 1 unit for the F1 SKU. Can be set up to maximum number allowed for subscription."
            }
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Service Bus namespace"
            }
        },
        "serviceBusQueueName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Queue"
            }
        },
        "streamAnalyticsJobName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "metadata": {
                "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
            }
        },
        "numberOfStreamingUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 48,
            "allowedValues": [
                1,
                3,
                6,
                12,
                18,
                24,
                30,
                36,
                42,
                48
            ],
            "metadata": {
                "description": "Number of Streaming Units"
            }
        },
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "The name of you Function App Site."
            }
        },
        "serverfarmName": {
            "type": "string",
            "defaultValue": "WestEuropeLinuxDynamicPlan",
            "metadata": {
                "description": "The name of you serverfarm."
            }
        }
    },
    "variables": {
        "consumerGroupName": "[concat(parameters('iotHubName'), '/events/ConsumerGroup1')]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
        "serviceBusVersion": "2017-04-01"
    },
    "functions": [],
    "resources": [
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[parameters('storageAccountName')]"
            },
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', parameters('containerName'))]",
                    "dependsOn": [
                        "[parameters('storageAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2018-04-01",
            "name": "[parameters('iotHubName')]",
            "location": "[parameters('location')]",
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 2
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 2
                    }
                },
                "cloudToDevice": {
                    "defaultTtlAsIso8601": "PT1H",
                    "maxDeliveryCount": 10,
                    "feedback": {
                        "ttlAsIso8601": "PT1H",
                        "lockDurationAsIso8601": "PT60S",
                        "maxDeliveryCount": 10
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "ttlAsIso8601": "PT1H",
                        "lockDurationAsIso8601": "PT1M",
                        "maxDeliveryCount": 10
                    }
                }
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('capacityUnits')]"
            }
        },
        {
            "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
            "apiVersion": "2018-04-01",
            "name": "[variables('consumerGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('serviceBusVersion')]",
            "name": "[parameters('serviceBusNamespaceName')]",
            "type": "Microsoft.ServiceBus/namespaces",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "apiVersion": "[variables('serviceBusVersion')]",
                    "name": "[parameters('serviceBusQueueName')]",
                    "type": "Queues",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT5M",
                        "maxSizeInMegabytes": "1024",
                        "requiresDuplicateDetection": "false",
                        "requiresSession": "false",
                        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                        "deadLetteringOnMessageExpiration": "false",
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": "10",
                        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                        "enablePartitioning": "false",
                        "enableExpress": "false"
                    }
                },
                {
                    "type": "AuthorizationRules",
                    "apiVersion": "[variables('serviceBusVersion')]",
                    "name": "listen",
                    "location": "West Europe",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "rights": [
                            "Listen"
                        ]
                    }
                },
                {
                    "type": "AuthorizationRules",
                    "apiVersion": "[variables('serviceBusVersion')]",
                    "name": "send",
                    "location": "West Europe",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "rights": [
                            "Send"
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.StreamAnalytics/StreamingJobs",
            "apiVersion": "2019-06-01",
            "name": "[parameters('streamAnalyticsJobName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "outputErrorPolicy": "stop",
                "eventsOutOfOrderPolicy": "adjust",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "transformation": {
                    "name": "Transformation",
                    "properties": {
                        "streamingUnits": "[parameters('numberOfStreamingUnits')]",
                        "query": "SELECT\r\n    *\r\nINTO\r\n    blobstorage\r\nFROM\r\n    iothub\n\nSELECT\r\n    *\r\nINTO\r\n    servicebus\r\nFROM\r\n    iothub\r\nWHERE\r\n    temperature > 29"
                    }
                }
            },
            "resources": [
                {
                    "type": "inputs",
                    "apiVersion": "2016-03-01",
                    "name": "iothub",
                    "dependsOn": [
                        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
                    ],
                    "properties": {
                        "type": "Stream",
                        "datasource": {
                            "type": "Microsoft.Devices/IotHubs",
                            "properties": {
                                "iotHubNamespace": "[parameters('iotHubName')]",
                                "sharedAccessPolicyName": "service",
                                "endpoint": "messages/events",
                                "consumerGroupName": "$Default",
                                "sharedAccessPolicyKey": "[listkeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys',parameters('iotHubName'), 'service'),'2018-04-01').primaryKey]"
                            }
                        },
                        "serialization": {
                            "type": "Json",
                            "properties": {
                                "encoding": "UTF8"
                            }
                        }
                    }
                },
                {
                    "type": "outputs",
                    "apiVersion": "2016-03-01",
                    "name": "servicebus",
                    "dependsOn": [
                        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
                    ],
                    "properties": {
                        "datasource": {
                            "type": "Microsoft.ServiceBus/Queue",
                            "properties": {
                                "queueName": "[parameters('serviceBusQueueName')]",
                                "propertyColumns": [],
                                "serviceBusNamespace": "[parameters('serviceBusNamespaceName')]",
                                "sharedAccessPolicyName": "send",
                                "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'send'), variables('serviceBusVersion')).primaryKey]"
                            }
                        },
                        "serialization": {
                            "type": "Json",
                            "properties": {
                                "encoding": "UTF8",
                                "format": "LineSeparated"
                            }
                        }
                    }
                },
                {
                    "type": "outputs",
                    "apiVersion": "2016-03-01",
                    "name": "blobstorage",
                    "dependsOn": [
                        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamAnalyticsJobName'))]"
                    ],
                    "properties": {
                        "datasource": {
                            "type": "Microsoft.Storage/Blob",
                            "properties": {
                                "storageAccounts": [
                                    {
                                        "accountName": "[parameters('storageAccountName')]",
                                        "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2019-06-01').keys[0].value]"
                                    }
                                ],
                                "container": "[parameters('containerName')]",
                                "pathPattern": "{date}",
                                "dateFormat": "yyyy/MM/dd",
                                "timeFormat": "HH"
                            }
                        },
                        "serialization": {
                            "type": "Json",
                            "properties": {
                                "encoding": "UTF8",
                                "format": "LineSeparated"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('functionAppName')]",
            "kind": "functionapp,linux",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "name": "[parameters('functionAppName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        }
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarmName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[parameters('serverfarmName')]",
            "location": "[parameters('location')]",
            "kind": "linux",
            "properties": {
                "reserved": true
            },
            "sku": {
                "Tier": "Dynamic",
                "Name": "Y1"
            }
        }
    ],
    "outputs": {
        "NamespaceConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('authRuleResourceId'), variables('serviceBusVersion')).primaryConnectionString]"
        },
        "SharedAccessPolicyPrimaryKey": {
            "type": "string",
            "value": "[listkeys(variables('authRuleResourceId'), variables('serviceBusVersion')).primaryKey]"
        }
    }
}
